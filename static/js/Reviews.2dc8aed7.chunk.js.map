{"version":3,"sources":["components/ReviewList/ReviewsList.styled.jsx","components/ReviewList/ReviewList.jsx","views/Reviews.jsx"],"names":["ReviewListStyle","styled","ul","ReviewAuthor","p","ReviewAuthorName","span","ReviewList","reviews","map","author","content","Reviews","idMovie","useState","setReviews","totalReviews","setTotalReviews","useEffect","fetchMovieReviews","then","response","data","results","total_results","finally"],"mappings":"0OAEaA,EAAkBC,IAAOC,GAAV,qEAKfC,EAAeF,IAAOG,EAAV,+CAIZC,EAAmBJ,IAAOK,KAAV,mE,OCLd,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,OACE,cAACR,EAAD,UACGQ,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,+BACE,eAACR,EAAD,sBACU,cAACE,EAAD,UAAmBK,OAE7B,4BAAIC,YCVC,SAASC,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,EAA8BC,mBAAS,IAAvC,mBAAON,EAAP,KAAgBO,EAAhB,KACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAaA,OAXAC,qBAAU,WACa,IAAjBF,GACFG,YAAkBN,GACfO,MAAK,SAAAC,GACJN,GAAW,kBAAMM,EAASC,KAAKC,WAC/BN,GAAgB,kBAAMI,EAASC,KAAKE,oBAErCC,YAEJ,CAACT,IAGF,kCACoB,IAAjBA,EACC,yEAEA,cAACT,EAAD,CAAYC,QAASA","file":"static/js/Reviews.2dc8aed7.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const ReviewListStyle = styled.ul`\r\n  font-size: 16px;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ReviewAuthor = styled.p`\r\n  color: #33cccc;\r\n`;\r\n\r\nexport const ReviewAuthorName = styled.span`\r\n  font-size: 20px;\r\n  color: #006363;\r\n`;\r\n","import {\r\n  ReviewAuthor,\r\n  ReviewAuthorName,\r\n  ReviewListStyle,\r\n} from './ReviewsList.styled';\r\n\r\nexport default function ReviewList({ reviews }) {\r\n  return (\r\n    <ReviewListStyle>\r\n      {reviews.map(({ author, content }) => (\r\n        <li>\r\n          <ReviewAuthor>\r\n            Author: <ReviewAuthorName>{author}</ReviewAuthorName>\r\n          </ReviewAuthor>\r\n          <p>{content}</p>\r\n        </li>\r\n      ))}\r\n    </ReviewListStyle>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { fetchMovieReviews } from '../services/fetchMovie';\r\nimport ReviewList from '../components/ReviewList/ReviewList';\r\n\r\nexport default function Reviews({ idMovie }) {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [totalReviews, setTotalReviews] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (totalReviews !== 0) {\r\n      fetchMovieReviews(idMovie)\r\n        .then(response => {\r\n          setReviews(() => response.data.results);\r\n          setTotalReviews(() => response.data.total_results);\r\n        })\r\n        .finally();\r\n    }\r\n  }, [totalReviews]);\r\n\r\n  return (\r\n    <section>\r\n      {totalReviews === 0 ? (\r\n        <p>We don't have any reviews for this movie</p>\r\n      ) : (\r\n        <ReviewList reviews={reviews} />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"sourceRoot":""}